task:
  kubernetes-dashboard:
    description: |
      https://artifacthub.io/packages/helm/k8s-dashboard/kubernetes-dashboard/5.0.4
      https://github.com/kubernetes/dashboard/tree/master/aio/deploy/helm-chart/kubernetes-dashboard
    args:
      cmd:
        type: string
        default: diff
        validation: x in ["pull", "image", "diff", "install", "delete", "upgrade", "status", "password"]
    const:
      NAMESPACE: kubernetes-dashboard
      app: kubernetes-dashboard
      chart: kubernetes-dashboard/kubernetes-dashboard
      version: 6.0.7
    step:
      - test "${K8S_CONTEXT}" == "$(kubectl config current-context)" || exit 1
      - sh ${DEP}/ops/tool/render.sh ops/${app} ${TMP}/${app}
      - |
        case "${cmd}" in
          "pull") helm pull ${chart} --version=${version} && mkdir -p ${HELM_HOME}/${app} && mv ${app}-${version}.tgz ${HELM_HOME}/${app}/;;
        esac
        chart=${HELM_HOME}/${app}/${app}-${version}.tgz
        case "${cmd}" in
          "pull") helm pull ${chart} --version=${version} && mkdir -p ${HELM_HOME}/${app} && mv ${app}-${version}.tgz ${HELM_HOME}/${app}/;;
          "image") sh ${DEP}/ops/tool/image.sh sync "docker.io" "kubernetesui" "" "" "${REGISTRY_ENDPOINT}" "${REGISTRY_NAMESPACE}" "${REGISTRY_USERNAME}" "${REGISTRY_PASSWORD}" "dashboard" v2.7.0;;
          "diff") helm diff upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --allow-unreleased --version=${version};;
          "install") helm install -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --version=${version};;
          "upgrade") helm upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --version=${version};;
          "status") helm status -n "${NAMESPACE}" "${app}";;
          "delete") helm delete -n "${NAMESPACE}" "${app}";;
          "password")
            kubectl apply -f ops/kubernetes-dashboard/service-account.yaml
            kubectl get secret -n "${NAMESPACE}" admin-user-token -o jsonpath="{.data.token}" | base64 --decode; echo
        esac
