task:
  elasticsearch:
    description: https://github.com/elastic/helm-charts/tree/master/elasticsearch
    args:
      cmd:
        type: string
        default: diff
        validation: x in ["diff", "install", "delete", "upgrade", "password", "status", "ssl", "image", "docker", "values"]
    const:
      app: elasticsearch
      chart: elastic/elasticsearch
      version: 7.15.0
    step:
      - test "${K8S_CONTEXT}" == "$(kubectl config current-context)" || exit 1
      - sh ${DEP}/ops/tool/render.sh ops/${app} ${TMP}/${app}
      - |
        case "${cmd}" in
          "pull") helm pull ${chart} --version=${version} && mkdir -p ${HELM_HOME}/${app} && mv ${app}-${version}.tgz ${HELM_HOME}/${app}/;;
        esac
        chart=${HELM_HOME}/${app}/${app}-${version}.tgz
        case "${cmd}" in
          "values") curl https://raw.githubusercontent.com/elastic/helm-charts/v${version}/${app}/values.yaml -o ops/${app}/values.yaml;;
          "image")
            sh ${DEP}/ops/tool/image.sh sync "docker.elastic.co" "elasticsearch" "" "" "${REGISTRY_ENDPOINT}" "${REGISTRY_NAMESPACE}" "${REGISTRY_USERNAME}" "${REGISTRY_PASSWORD}" "elasticsearch" "${version}"
            ;;
          "docker")
            docker login --username="${REGISTRY_USERNAME}" --password="${REGISTRY_PASSWORD}" "${REGISTRY_ENDPOINT}"
            docker build --tag=${REGISTRY_ENDPOINT}/${REGISTRY_NAMESPACE}/elasticsearch:${version}-hl ${TMP}/${app}/docker -f ${TMP}/${app}/docker/Dockerfile-elasticsearch
            docker push ${REGISTRY_ENDPOINT}/${REGISTRY_NAMESPACE}/elasticsearch:${version}-hl
            ;;
          "diff") helm diff upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --allow-unreleased --version=${version};;
          "install")
            kubectl get secret elastic-certificates -n "${NAMESPACE}" 2>/dev/null 1>&2 || kubectl create secret generic elastic-certificates -n "${NAMESPACE}" --from-file=${TMP}/elasticsearch/elastic-certificates.p12
            kubectl get secret elastic-certificate-pem -n "${NAMESPACE}" 2>/dev/null 1>&2 || kubectl create secret generic elastic-certificate-pem -n "${NAMESPACE}" --from-file=${TMP}/elasticsearch/elastic-certificate.pem
            kubectl get secret elastic-certificate-crt -n "${NAMESPACE}" 2>/dev/null 1>&2 || kubectl create secret generic elastic-certificate-crt -n "${NAMESPACE}" --from-file=${TMP}/elasticsearch/elastic-certificate.crt
            kubectl get secret elastic-credentials -n "${NAMESPACE}" 2>/dev/null 1>&2 || kubectl create secret generic elastic-credentials -n "${NAMESPACE}" --from-literal=password="${ELASTICSEARCH_PASSWORD}" --from-literal=username=elastic
            helm install -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --version=${version};;
          "upgrade") helm upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --version=${version};;
          "status") helm status -n "${NAMESPACE}" "${app}";;
          "delete")
            helm delete -n "${NAMESPACE}" "${app}"
            kubectl delete pvc -n "${NAMESPACE}" security-master-security-master-0
            kubectl delete pvc -n "${NAMESPACE}" security-master-security-master-1
            kubectl delete pvc -n "${NAMESPACE}" security-master-security-master-2
            kubectl delete secret -n "${NAMESPACE}" elastic-certificate-crt
            kubectl delete secret -n "${NAMESPACE}" elastic-certificate-pem
            kubectl delete secret -n "${NAMESPACE}" elastic-certificates
            kubectl delete secret -n "${NAMESPACE}" elastic-credentials
            ;;
          "ssl")
            docker rm -f elastic-helm-charts-certs || true
            mkdir -p ${TMP}/elasticsearch && cd ${TMP}/elasticsearch &&
            docker run --name elastic-helm-charts-certs -i -w /tmp docker.elastic.co/elasticsearch/elasticsearch:${version} \
              /bin/sh -c " \
                elasticsearch-certutil ca --out /tmp/elastic-stack-ca.p12 --pass '' && \
                elasticsearch-certutil cert --name security-master --dns security-master --ca /tmp/elastic-stack-ca.p12 --pass '' --ca-pass '' --out /tmp/elastic-certificates.p12" && \
            docker cp elastic-helm-charts-certs:/tmp/elastic-certificates.p12 ./ && docker rm -f elastic-helm-charts-certs && \
            openssl pkcs12 -nodes -passin pass:'' -in elastic-certificates.p12 -out elastic-certificate.pem && \
            openssl x509 -outform der -in elastic-certificate.pem -out elastic-certificate.crt
            ;;
          "password")
            kubectl get secret -n "dev" elastic-credentials -o jsonpath="{.data.username}" | base64 --decode; echo
            kubectl get secret -n "dev" elastic-credentials -o jsonpath="{.data.password}" | base64 --decode; echo
            ;;
        esac
