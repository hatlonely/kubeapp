task:
  qbittorrent:
    description: |      
      ## ops 命令

      ops --variable .cfg/dev.yaml -a run --env dev --task qbittorrent --cmd=pull
      ops --variable .cfg/dev.yaml -a run --env dev --task qbittorrent --cmd=image
      ops --variable .cfg/dev.yaml -a run --env dev --task qbittorrent --cmd=install
      ops --variable .cfg/dev.yaml -a run --env dev --task qbittorrent --cmd=password

      ## 安装
      
      1. 首次登录 admin/adminadmin
      2. 设置 -> web UI -> 简体中文
      3. 设置 -> Web UI -> 修改密码
      4. 设置 -> Web UI -> 关闭 Host Header 属性验证
      6. 设置 -> 下载 -> 默认保存路径 -> /nfs
      7. 设置 -> 下载 -> 保存未完成的 torrent 到 /nfs/incomplete
      8. 添加 qbittorrent dashboard 15116

      ## 参考链接

      - 仓库地址: <https://artifacthub.io/packages/helm/alekc/qbittorrent>
      - qbittorrent-dashboard: <https://grafana.com/grafana/dashboards/15116-qbittorrent-dashboard/>
    args:
      cmd:
        type: string
        default: diff
        validation: x in ["pull", "diff", "image", "install", "delete", "upgrade", "status", "password"]
    const:
      SECRET_NAME: qbittorrent-tls
      app: qbittorrent
      chart: alekc/qbittorrent
      version: 0.2.0
    step:
      - test "${K8S_CONTEXT}" == "$(kubectl config current-context)" || exit 1
      - sh ${DEP}/ops/tool/render.sh ops/${app} ${TMP}/${app}
      - |
        case "${cmd}" in
          "pull") helm pull ${chart} --version=${version} && mkdir -p ${HELM_HOME}/${app} && mv ${app}-${version}.tgz ${HELM_HOME}/${app}/;;
        esac
        chart=${HELM_HOME}/${app}/${app}-${version}.tgz
        case "${cmd}" in
          "image")
            sh ${DEP}/ops/tool/image.sh sync "docker.io" "linuxserver" "" "" "${REGISTRY_ENDPOINT}" "${REGISTRY_NAMESPACE}" "${REGISTRY_USERNAME}" "${REGISTRY_PASSWORD}" "qbittorrent" "4.5.2"
            ;;
          "diff") helm diff upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --allow-unreleased --version=${version};;
          "install") helm install -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --version=${version};;
          "upgrade") helm upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --version=${version};;
          "status") helm status -n "${NAMESPACE}" "${app}";;
          "delete") helm delete -n "${NAMESPACE}" "${app}";;
          "password") kubectl get secret --namespace "${NAMESPACE}" "${app}" -o jsonpath="{.data.qbittorrent-password}" | base64 --decode; echo
        esac
