name: kubeapp

dep:
  ops:
    type: git
    url: "https://github.com/hatlonely/ops.git"
    version: master

env:
  dev:
    K8S_CONTEXT: home-k8s
    NAMESPACE: dev

task:
  namespace:
    step:
      - test "${K8S_CONTEXT}" == "$(kubectl config current-context)" || exit 1
      - kubectl get namespaces "${NAMESPACE}" 2>/dev/null 1>&2 || kubectl create namespace "${NAMESPACE}"
  helm-add-repo:
    step:
      - helm repo add bitnami https://charts.bitnami.com/bitnami
      - helm repo add elastic https://helm.elastic.co
      - helm repo add k8s-dashboard https://kubernetes.github.io/dashboard
      - helm repo update
  k8s-dashboard:
    description: |
      https://artifacthub.io/packages/helm/k8s-dashboard/kubernetes-dashboard/4.3.1
      https://github.com/kubernetes/dashboard/tree/master/aio/deploy/helm-chart/kubernetes-dashboard
    args:
      cmd:
        type: string
        default: diff
        validation: x in ["diff", "install", "delete", "upgrade", "password"]
    const:
      app: k8s-dashboard
      chart: k8s-dashboard/kubernetes-dashboard
      version: 4.3.1
    step:
      - test "${K8S_CONTEXT}" == "$(kubectl config current-context)" || exit 1
      - sh ${DEP}/ops/tool/render.sh ops/${app} ${TMP}/${app}
      - |
        case "${cmd}" in
          "diff") helm diff upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --allow-unreleased --version=${version};;
          "install") helm install -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "upgrade") helm upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "delete") helm delete -n "${NAMESPACE}" "${app}";;
          "password")
            ADMIN_SECRET=$(kubectl get secrets -n kube-system | grep dashboard-admin | awk '{print $1}')
            DASHBOARD_LOGIN_TOKEN=$(kubectl describe secret -n kube-system ${ADMIN_SECRET} | grep -E '^token' | awk '{print $2}')
            echo ${DASHBOARD_LOGIN_TOKEN}
        esac
  mongo:
    description: https://github.com/bitnami/charts/tree/master/bitnami/mongodb
    args:
      cmd:
        type: string
        default: diff
        validation: x in ["diff", "install", "delete", "upgrade", "password"]
    const:
      app: mongo
      chart: bitnami/mongodb
      version: 10.23.0
    step:
      - test "${K8S_CONTEXT}" == "$(kubectl config current-context)" || exit 1
      - sh ${DEP}/ops/tool/render.sh ops/${app} ${TMP}/${app}
      - |
        case "${cmd}" in
          "diff") helm diff upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --allow-unreleased --version=${version};;
          "install") helm install -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "upgrade") helm upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "delete") helm delete -n "${NAMESPACE}" "${app}";;
          "password") kubectl get secret --namespace "${NAMESPACE}" mongo-mongodb -o jsonpath="{.data.mongodb-root-password}" | base64 --decode; echo
        esac
  redis:
    description: https://github.com/bitnami/charts/tree/master/bitnami/redis
    args:
      cmd:
        type: string
        default: diff
        validation: x in ["diff", "install", "delete", "upgrade", "password"]
    const:
      app: redis
      chart: bitnami/redis
      version: 10.8.1
    step:
      - test "${K8S_CONTEXT}" == "$(kubectl config current-context)" || exit 1
      - sh ${DEP}/ops/tool/render.sh ops/${app} ${TMP}/${app}
      - |
        case "${cmd}" in
          "diff") helm diff upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --allow-unreleased --version=${version};;
          "install") helm install -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "upgrade") helm upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "delete") helm delete -n "${NAMESPACE}" "${app}";;
          "password") kubectl get secret --namespace "${NAMESPACE}" "${app}" -o jsonpath="{.data.redis-password}" | base64 --decode; echo
        esac
  redis-cluster:
    description: https://github.com/bitnami/charts/tree/master/bitnami/redis-cluster
    args:
      cmd:
        type: string
        default: diff
        validation: x in ["diff", "install", "delete", "upgrade", "password"]
    const:
      app: redis-cluster
      chart: bitnami/redis-cluster
      version: 6.2.4
    step:
      - test "${K8S_CONTEXT}" == "$(kubectl config current-context)" || exit 1
      - sh ${DEP}/ops/tool/render.sh ops/${app} ${TMP}/${app}
      - |
        case "${cmd}" in
          "diff") helm diff upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --allow-unreleased --version=${version};;
          "install") helm install -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "upgrade") helm upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "delete") helm delete -n "${NAMESPACE}" "${app}";;
          "password") kubectl get secret --namespace "${NAMESPACE}" "${app}" -o jsonpath="{.data.redis-password}" | base64 --decode; echo
        esac
  mysql:
    description: https://github.com/bitnami/charts/tree/master/bitnami/mysql
    args:
      cmd:
        type: string
        default: diff
        validation: x in ["diff", "install", "delete", "upgrade", "password"]
    const:
      app: mysql
      chart: bitnami/mysql
      version: 8.7.2
    step:
      - test "${K8S_CONTEXT}" == "$(kubectl config current-context)" || exit 1
      - sh ${DEP}/ops/tool/render.sh ops/${app} ${TMP}/${app}
      - |
        case "${cmd}" in
          "diff") helm diff upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --allow-unreleased --version=${version};;
          "install") helm install -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "upgrade") helm upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "delete") helm delete -n "${NAMESPACE}" "${app}";;
          "password") kubectl get secret --namespace "${NAMESPACE}" "${app}" -o jsonpath="{.data.mysql-root-password}" | base64 --decode; echo
        esac
  phpmyadmin:
    description: https://github.com/bitnami/charts/tree/master/bitnami/phpmyadmin
    args:
      cmd:
        type: string
        default: diff
        validation: x in ["diff", "install", "delete", "upgrade", "password"]
    const:
      app: phpmyadmin
      chart: bitnami/phpmyadmin
      version: 8.2.10
    step:
      - test "${K8S_CONTEXT}" == "$(kubectl config current-context)" || exit 1
      - sh ${DEP}/ops/tool/render.sh ops/${app} ${TMP}/${app}
      - |
        case "${cmd}" in
          "diff") helm diff upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --allow-unreleased --version=${version};;
          "install") helm install -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "upgrade") helm upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "delete") helm delete -n "${NAMESPACE}" "${app}";;
          "password") kubectl get secret --namespace "${NAMESPACE}" "${app}" -o jsonpath="{.data.mysql-root-password}" | base64 --decode; echo
        esac
  elasticsearch:
    description: https://github.com/elastic/helm-charts/tree/master/elasticsearch
    args:
      cmd:
        type: string
        default: diff
        validation: x in ["diff", "install", "delete", "upgrade", "password"]
    const:
      app: elasticsearch
      chart: elastic/elasticsearch
      version: 7.13.4
    step:
      - test "${K8S_CONTEXT}" == "$(kubectl config current-context)" || exit 1
      - sh ${DEP}/ops/tool/render.sh ops/${app} ${TMP}/${app}
      - |
        case "${cmd}" in
          "diff") helm diff upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --allow-unreleased --version=${version};;
          "install") helm install -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "upgrade") helm upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "delete") helm delete -n "${NAMESPACE}" "${app}";;
        esac
  kibana:
    description: https://github.com/elastic/helm-charts/tree/master/kibana
    args:
      cmd:
        type: string
        default: diff
        validation: x in ["diff", "install", "delete", "upgrade", "password"]
    const:
      app: kibana
      chart: elastic/kibana
      version: 7.13.4
    step:
      - test "${K8S_CONTEXT}" == "$(kubectl config current-context)" || exit 1
      - sh ${DEP}/ops/tool/render.sh ops/${app} ${TMP}/${app}
      - |
        case "${cmd}" in
          "diff") helm diff upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/${app}/values-adapter.yaml" --allow-unreleased --version=${version};;
          "install") helm install -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "upgrade") helm upgrade -n "${NAMESPACE}" "${app}" "${chart}" -f "${TMP}/mongo/values-adapter.yaml" --version=${version};;
          "delete") helm delete -n "${NAMESPACE}" "${app}";;
        esac